{"version":3,"sources":["gameoflife2.js"],"names":["Board","size","offset","grid","makeGrid","round","nextRound","prepareNextRound","prototype","advanceRound","y","push","x","Math","random","stringState","string","length","char","getCellNeighbors","test","testX","testY","undefined","neighbors","Object","create","N","NE","E","SE","S","SW","W","NW","resolveCell","cellState","liveNeighbors","direction","drawGrid","parent","board","row","document","createElement","checkbox","col","type","checked","appendChild","addEventListener","event","target","game","querySelector","button","lastChild","removeChild"],"mappings":"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","file":"gameoflife2.ff07d7db.map","sourceRoot":"..","sourcesContent":["function Board(size, offset) {\n\t\n\tthis.size = size;\n\tthis.offset = offset;\n\tthis.grid = this.makeGrid();\n\tthis.round = 0;\n\tthis.nextRound = this.prepareNextRound(this.grid);\n}\nBoard.prototype.advanceRound = function() {\n\tthis.round++;\n\tthis.grid = this.nextRound;\n\tthis.nextRound = this.prepareNextRound(this.grid);\n}\nBoard.prototype.makeGrid = function(size = this.size,\n\t\t\t\t\t\t\t\t\toffset = this.offset) {\n\tvar grid = [];\n\tfor (var y = 0; y < size+offset*2; y++) {\n\t\tgrid.push([]);\n\t\tfor (var x = 0; x < size+offset*2; x++) {\n\t\t\tgrid[y][x] = Math.random() > 0.5;\n\t\t}\n\t}\n\treturn grid;\n};\nBoard.prototype.stringState = function(grid = this.grid) {\n\tvar string = \"\";\n\tfor (var y = 0+this.offset; y < grid.length-this.offset; y++) {\n\t\tfor (var x = this.offset; x < grid[y].length-this.offset; x++) {\n\t\t\tvar char = grid[y][x] ? 'O' : 'X';\n\t\t\tstring = string + char;\n\t\t}\n\t\tstring = string + '\\n';\n\t}\n\treturn string;\n};\nBoard.prototype.getCellNeighbors = function(grid, x, y) {\n\t\n\tfunction test(testX, testY) {\n\t\tif (testY < 0 || testY > grid.length - 1)\n\t\t\treturn undefined;\n\t\telse\n\t\t\treturn grid[testY][testX];\n\t}\n\n\tvar neighbors = Object.create(null);\n\n\tneighbors.N \t= test(x, \ty-1);\n\tneighbors.NE \t= test(x+1, y-1);\n\tneighbors.E \t= test(x+1, y);\n\tneighbors.SE \t= test(x+1, y+1);\n\tneighbors.S \t= test(x,\ty+1);\n\tneighbors.SW \t= test(x-1,\ty+1);\n\tneighbors.W \t= test(x-1, y);\n\tneighbors.NW \t= test(x-1,\ty-1);\t\n\n\treturn neighbors;\n};\nBoard.prototype.prepareNextRound = function(grid = this.grid) {\n\tvar nextRound = [];\n\tfor (var y = 0; y < grid.length; y++) {\n\t\tnextRound.push([]);\n\t\tfor (var x = 0; x < grid[y].length; x++) {\n\t\t\tvar neighbors = this.getCellNeighbors(grid, x, y);\n\t\t\tnextRound[y][x] = this.resolveCell(grid[y][x], neighbors);\n\t\t}\n\t}\n\treturn nextRound;\n};\nBoard.prototype.resolveCell = function(cellState, neighbors) {\n\tvar liveNeighbors = 0;\n\tfor (var direction in neighbors) {\n\t\tif (neighbors[direction] &&\n\t\t\tneighbors[direction] != undefined)\n\t\tliveNeighbors++;\n\t}\n\tif (!cellState && liveNeighbors == 3) {\n\t\treturn true;\n\t} else if (cellState && liveNeighbors > 3) {\n\t\treturn false;\n\t} else if (cellState && liveNeighbors < 2) {\n\t\treturn false;\n\t} else if (cellState && 2 <= liveNeighbors <= 3) {\n\t\treturn true;\n\t}\n}\n\nfunction drawGrid(parent, board) {\n  for (var y = 0; y < board.grid.length; y++) {\n    var row = document.createElement(\"div\");\n    for (var x = 0; x < board.grid[y].length; x++) {\n      var checkbox = document.createElement(\"input\");\n      checkbox.row = y;\n      checkbox.col = x;\n      checkbox.type = \"checkbox\";\n      checkbox.checked = board.grid[y][x];\n      row.appendChild(checkbox);\n    }\n    parent.appendChild(row);\n  }\n  parent.addEventListener(\"change\", function(event) {\n    board.nextRound[event.target.row][event.target.col] = event.target.checked;\n  });\n}\n\n  var game = new Board(20, 2);\n  var grid = document.querySelector(\"#grid\");\n  \n  var button = document.querySelector(\"#next\");\n  button.addEventListener(\"click\", function(event) {\n    game.advanceRound();\n    while (grid.lastChild) {\n      grid.removeChild(grid.lastChild);\n    }\n    drawGrid(grid, game);\n  });\n  \n  drawGrid(grid, game);\n"]}