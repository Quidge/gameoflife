{"id":"index.html","dependencies":[{"name":"./style.css","dynamic":true,"parent":"/Users/lirum/Documents/programming/projects/gameoflife/index.html","resolved":"/Users/lirum/Documents/programming/projects/gameoflife/style.css"},{"name":"./gameoflife2.js","dynamic":true,"parent":"/Users/lirum/Documents/programming/projects/gameoflife/index.html","resolved":"/Users/lirum/Documents/programming/projects/gameoflife/gameoflife2.js"}],"generated":{"html":"<!DOCTYPE HTML>\n<html>\n<head>\n\t<title>game of life</title>\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\">\n\t<link rel=\"stylesheet\" href=\"/0296dd0dbd6c1d62ab46afc12c1f3c08.css\">\n</head>\n<body>\n\t<div class=\"container mt-5\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h1>conway's game of life</h1>\n\t\t\t\t\t\t<p class=\"lead\">imagined using html checkboxes and javascript</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t\t<div id=\"\">\n\t\t\t\t\t\t\t\t<p>This is pretty neat. Pulling from <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">the Wikipedia article</a>, cells have four rules governing whether they'll live or not:</p>\n\n\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t<li>Any live cell with fewer than two live neighbours dies, as if caused by underpopulation.</li>\n\t\t\t\t\t\t\t\t\t<li>Any live cell with two or three live neighbours lives on to the next generation.</li>\n\t\t\t\t\t\t\t\t\t<li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\n\t\t\t\t\t\t\t\t\t<li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\n\t\t\t\t\t\t\t\t</ol>\n\n\t\t\t\t\t\t\t\t<p>The game was originally imagined to be played in an infinite plane, with an inifinite number of cells. Computers can't do infinite, so there has to be some way to get around that. I chose to regard 'out of bound' cells as dead cells.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 text-center\">\n\t\t\t\t<h4 class=\"lead\">(click the \"Next generation\" below the grid to 'simulate life')</h4>\n\t\t\t\t<div id=\"grid\" class=\"game-grid\"></div>\n\t\t\t\t<button id=\"next\" class=\"btn btn-primary\">Next generation</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t</body>\n\t<script src=\"/63f4667a89a1652917f2f854ff07d7db.js\"></script>\n\n\t</html>"},"hash":"8c774352edd6971d49aa5af297ff3979","cacheData":{}}